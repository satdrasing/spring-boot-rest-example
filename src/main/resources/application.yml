### This is the main way to configure the application (other than annotations).
### This file is in Yaml format but you can also configure spring boot using the traditional
### Java properties file format.

spring.jmx:
  enabled: false

spring.datasource:
  driverClassName: org.h2.Driver
  url: jdbc:h2:mem:bootexample;MODE=MySQL

server:
  port: 8090

#todo: make sure to always enable security in production
#security:
#  basic:
#    enabled: false

#management endpoints on a separate port
management:
  server:
    port: 8091
  endpoints:
    web:
      exposure:
        include: auditevents, beans, conditions, configprops, flyway, liquibase,  health, heapdump, info, logfile, loggers,  metrics, prometheus, scheduledtasks, sessions, shutdown, threaddump, env
#default project info followed by actual injected pom-specified values.
project:
  name: spring-boot-rest-example
  version: 0.1
  description: boot-example default description
info:
  build:
    artifact: ${project.artifactId}
    name: ${project.name}
    description: ${project.description}
    version: ${project.version}

hotel.service:
  name: 'default profile:'
---
spring:
  profiles: test
  h2:
    console:
      enabled: true

spring.jpa:
  hibernate.ddl-auto: create-drop

hotel.service:
  name: 'test profile:'

logging:
  file: boot_example.log
  org.hibernate: INFO

